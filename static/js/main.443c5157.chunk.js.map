{"version":3,"sources":["store/types.js","api/apiSource.js","store/actions.js","utils/ulits.js","components/Pagination.js","components/Search.js","components/TaskList.js","assets/icons/tasks.svg","assets/icons/edit.svg","assets/icons/login.svg","components/Nav.js","hooks/customHooks.js","components/TaskEditForm.js","components/TaskCreate.js","components/LoginForm.js","components/Alert.js","components/App.js","store/reducers.js","index.js"],"names":["GET_TASKS","SET_LOADING","CREATE_TASK","LOG_IN","SHOW_ALERT","HIDE_ALERT","LOG_OUT","GET_TASK_COUNT","SET_PAGE","EDIT_TASK","SET_SEARCH_FIELD","SET_SEARCH_ORDER","axios","create","baseURL","setLoading","value","type","payload","showAlert","text","dispatch","setTimeout","capitalize","word","loweredCase","toLowerCase","toUpperCase","slice","Pagination","totalTasks","currentPage","useDispatch","pageNumbers","i","Math","ceil","push","highlight","number","className","map","style","background","onClick","Search","onSubmit","e","preventDefault","field","document","querySelector","order","setSerchOrder","htmlFor","name","id","TaskList","auth","useSelector","state","tasks","totalTaskCount","search","loading","useEffect","pageNum","sortDirection","sortField","apiSource","get","params","developer","page","sort_direction","sort_field","then","res","data","message","total_task_count","fetchTasks","length","task","username","email","val","status","to","Nav","src","logo","width","alt","Cookies","remove","login","useInput","init","useState","setValue","bind","onChange","event","target","clear","TaskEditForm","match","history","useHistory","targetTaskId","token","targetTask","find","Number","currentText","initText","useRef","statusRef","taskStatus","setTaskStatus","handleChange","checked","modified","current","form","FormData","append","post","window","location","href","editTask","ref","placeholder","required","TaskCreate","validateEmail","validator","isEmail","handleData","this","fn","ms","timeout","func","apply","arguments","clearTimeout","debounce","emailInput","addEventListener","removeEventListener","createTask","sanitize","LoginForm","password","set","expires","logIn","Alert","alert","App","readCookies","path","exact","component","initTasks","initAuth","searchInit","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.443c5157.chunk.js","sourcesContent":["export const GET_TASKS = \"GET_TASKS\"\r\n\r\nexport const SET_LOADING = \"SET_LOADING\"\r\n\r\nexport const CREATE_TASK = \"CREATE_TASK\"\r\n\r\nexport const LOG_IN = \"LOG_IN\"\r\n\r\nexport const SHOW_ALERT = \"SHOW_ALERT\"\r\nexport const HIDE_ALERT = \"HIDE_ALERT\"\r\n\r\nexport const LOG_OUT = \"LOG_OUT\"\r\n\r\nexport const GET_TASK_COUNT = \"GET_TASK_COUNT\"\r\n\r\nexport const SET_PAGE = \"SET_PAGE\"\r\n\r\nexport const EDIT_TASK = \"EDIT_TASK\"\r\n\r\nexport const SET_SEARCH_FIELD = \"SET_SEARCH_FIELD\"\r\nexport const SET_SEARCH_ORDER = \"SET_SEARCH_ORDER\"\r\n","import axios from \"axios\"\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://uxcandy.com/~shapoval/test-task-backend/v2\"\r\n})","import {GET_TASKS, \r\n    CREATE_TASK, \r\n    LOG_IN, \r\n    SHOW_ALERT, \r\n    HIDE_ALERT, \r\n    LOG_OUT, \r\n    GET_TASK_COUNT,\r\n    SET_PAGE,\r\n    EDIT_TASK,\r\n    SET_SEARCH_FIELD,\r\n    SET_SEARCH_ORDER,\r\n    SET_LOADING,\r\n   \r\n} from \"./types\"\r\nimport apiSource from \"../api/apiSource\"\r\nimport Cookies from 'js-cookie'\r\n\r\nexport const setLoading = (value) => {\r\n    return {\r\n        type:SET_LOADING,\r\n        payload:value\r\n    }\r\n}\r\n\r\nexport const fetchTasks = (pageNum=1, sortDirection, sortField) => {\r\n    return (dispatch) => {\r\n        dispatch(setLoading(true))\r\n        apiSource.get(\"/\", {\r\n            params:{\r\n                developer:\"Enver\",\r\n                page:pageNum,\r\n                sort_direction:sortDirection,\r\n                sort_field:sortField\r\n            }})\r\n            .then(res => {\r\n                dispatch({type:GET_TASKS, payload:res.data.message.tasks})\r\n                dispatch({type:GET_TASK_COUNT, payload:res.data.message.total_task_count})})\r\n    }\r\n}\r\n\r\nexport const createTask = (username, email, text) => {\r\n\r\n    const form = new FormData(); \r\n    form.append(\"username\", username)  \r\n    form.append(\"email\", email)  \r\n    form.append(\"text\", text)  \r\n    return (dispatch) => {\r\n    apiSource.post(\"/create\", form,{ \r\n        \r\n        params:{\r\n        developer:\"Enver\"\r\n    }})\r\n    .then(res => {\r\n        if (res.data.status === \"ok\"){\r\n            dispatch({type:CREATE_TASK, payload: res.data.message})\r\n            dispatch(showAlert(\"Задача добавлена\"))\r\n        }\r\n        else{\r\n            dispatch(showAlert(\"NO\"))\r\n        }   \r\n    })\r\n}}\r\n\r\n\r\nexport const hideAlert = (text) => {\r\n    return {\r\n        type: HIDE_ALERT\r\n    }\r\n}\r\nexport const showAlert = (text) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type:SHOW_ALERT, \r\n            payload: text\r\n        })\r\n        setTimeout(() => dispatch({\r\n            type:HIDE_ALERT\r\n        }), 2000)\r\n    }\r\n    \r\n}\r\n\r\nexport const logIn = (username, password) => {\r\n\r\n    const form = new FormData(); \r\n    form.append(\"username\", username)  \r\n    form.append(\"password\", password)  \r\n\r\n    return (dispatch) => {\r\n    apiSource.post(\"/login\", form,{ \r\n        \r\n        params:{\r\n        developer:\"Enver\"\r\n    }})\r\n    .then(res => { \r\n        if (res.data.status === \"error\"){\r\n            return dispatch(showAlert(res.data.message.password))\r\n        }\r\n        dispatch({type:LOG_IN, payload: res.data.message.token})\r\n        Cookies.set(\"admin\", true, { expires: 1 })\r\n        Cookies.set(\"token\", res.data.message.token,{ expires: 1 } )\r\n    })\r\n}}\r\n\r\nexport const logOut = () => {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}\r\n\r\n\r\nexport const setPage = (num) => {\r\n    return {\r\n        type:SET_PAGE,\r\n        payload:num\r\n    }\r\n}\r\n\r\nexport const editTask = (id, token, text, status) => {\r\n    if (!Cookies.get(\"admin\")){\r\n        window.location.href = '/'\r\n        return showAlert(\"Пожалуйста, авторизируйтесь!\")\r\n    }\r\n    return (dispatch) => {\r\n    const form = new FormData(); \r\n    form.append(\"status\", status)  \r\n    form.append(\"text\", text)  \r\n    form.append(\"token\", token)  \r\n   \r\n    apiSource.post(`/edit/${id}`, form,{ \r\n        params:{\r\n        developer:\"Enver\"\r\n    }})\r\n    .then(res =>{ \r\n        dispatch({type:EDIT_TASK})\r\n    })\r\n}}\r\n\r\nexport const setSerchField = (value) => {\r\n    return {\r\n        type:SET_SEARCH_FIELD,\r\n        payload:value\r\n    }\r\n}\r\nexport const setSerchOrder = (value) => {\r\n    return {\r\n        type:SET_SEARCH_ORDER,\r\n        payload:value\r\n    }\r\n}\r\n\r\n\r\n\r\n","export function capitalize(word) {\r\n    const loweredCase = word.toLowerCase();\r\n    return word[0].toUpperCase() + loweredCase.slice(1);\r\n  }\r\n\r\nexport let debounce = (fn, ms) => {\r\n    let timeout;\r\n    return function(){ \r\n      const func = () => {\r\n          fn.apply(this, arguments)}\r\n      clearTimeout(timeout)\r\n      timeout = setTimeout(func, ms)\r\n    }   \r\n  }","import React from 'react'\r\nimport { setPage } from '../store/actions'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Pagination = ({totalTasks, currentPage}) => {\r\n\r\n    const itemsPerPage = 3\r\n\r\n    const dispatch = useDispatch()\r\n    const pageNumbers = []\r\n\r\n    for (let i = 1; i <= Math.ceil(totalTasks/itemsPerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    const highlight = (number) => number === currentPage ? \"grey\": \"white\"\r\n        \r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"pagination-box\">\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} \r\n                    className=\"pagination__item\" \r\n                    style={{background:`${highlight(number)}`}}\r\n                    onClick={() => dispatch(setPage(number))}\r\n                    >\r\n                        {number}   \r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport { setSerchField, setSerchOrder } from '../store/actions'\r\nimport { useDispatch} from 'react-redux'\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const field = document.querySelector(\"#field\")\r\n        const order = document.querySelector(\"#order\")\r\n\r\n        dispatch(setSerchField(field.value))\r\n        dispatch(setSerchOrder(order.value))\r\n    \r\n    }\r\n    return (\r\n        <div className=\"searchBar\">\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"field\">Сортировать по полю:</label>\r\n                <select name=\"field\" id=\"field\" className=\"searchBar__item\">\r\n                    <option value=\"id\">--Выберите--</option>\r\n                    <option value=\"username\">Имя</option>\r\n                    <option value=\"email\">Е-почта</option>\r\n                    <option value=\"status\">Статус</option>\r\n                </select>\r\n                <select name=\"order\" id=\"order\" className=\"searchBar__item\">\r\n                    <option value=\"desc\">По убыванию</option>\r\n                    <option value=\"asc\">По возрастанию</option>\r\n                </select>\r\n                <button type=\"submit\" className=\"button searchBar__button button-green\">Сортировать</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","\r\nimport {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchTasks} from '../store/actions'\r\nimport {capitalize} from \"../utils/ulits\"\r\n\r\nimport Pagination from './Pagination'\r\nimport Search from './Search'\r\n\r\n\r\n\r\n\r\nconst TaskList = () => {\r\n    const auth = useSelector(state => state.auth.auth)\r\n\r\n    const statusConfig = (val) => {\r\n        const table = {\r\n            0: \"задача не выполнена\",\r\n            1: \"задача не выполнена, отредактирована админом\",\r\n            10:\"задача выполнена\",\r\n            11: \"задача отредактирована админом и выполнена\"\r\n        }\r\n        return table[val]\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    let tasks = useSelector(state => state.tasks.tasks)\r\n    const totalTaskCount = useSelector(state => state.tasks.totalTasks)\r\n    const currentPage = useSelector(state => state.currentPage)\r\n    const field = useSelector(state => state.search.field)\r\n    const order = useSelector(state => state.search.order)\r\n    const loading = useSelector(state => state.tasks.loading)\r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasks(currentPage, order, field))\r\n    },[currentPage, field, order, dispatch])\r\n\r\n    \r\n    if (loading){\r\n        return (\r\n           <div className=\"rightSide rightSide--bg-grey\">\r\n               <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n           </div>\r\n        )\r\n    }\r\n    if (tasks.length === 0){\r\n        return (\r\n            <div className=\"taskList-empty rightSide\">\r\n                <h1>Пока заданий нет!</h1>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"taskList rightSide\">\r\n            <h1 className=\"taskList__title\">Все задания</h1>\r\n            <Search/>\r\n            {tasks.map(task =>\r\n            <div key={task.id} className=\"task taskList__item\">\r\n                <p className=\"task__item \"><strong>Имя:</strong> {capitalize(task.username)}</p>\r\n                <p className=\"task__item\"><strong>E-почта:</strong> {capitalize(task.email)}</p>\r\n                <p className=\"task__item\"><strong>Задача: </strong>{capitalize(task.text)}</p>\r\n                <p className=\"task__item\"><strong>Статус: </strong>{statusConfig(task.status)}</p>\r\n                {auth &&\r\n                <Link to={`/edit/${task.id}`}>\r\n                <div className=\"task__button-center\">\r\n                    <button className=\"button button-blue\">Редактировать</button>\r\n                </div>\r\n                </Link>}\r\n            </div>\r\n            )}\r\n            <Pagination \r\n                totalTasks={totalTaskCount}\r\n                currentPage={currentPage}\r\n                 />\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default TaskList\r\n","export default __webpack_public_path__ + \"static/media/tasks.b3bc6ae0.svg\";","export default __webpack_public_path__ + \"static/media/edit.b066419a.svg\";","export default __webpack_public_path__ + \"static/media/login.60a81c8d.svg\";","import React from 'react'\r\n\r\nimport logo from \"../assets/icons/tasks.svg\"\r\nimport create from \"../assets/icons/edit.svg\"\r\nimport login from \"../assets/icons/login.svg\"\r\n\r\nimport { Link} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logOut } from '../store/actions'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nconst Nav = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth.auth)\r\n\r\n    const loggingOut = () => {\r\n        Cookies.remove(\"admin\")\r\n        Cookies.remove(\"token\")\r\n        dispatch(logOut())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <Link to=\"/\">\r\n                <div className=\"nav__item\">\r\n                    <img src={logo} width=\"50\" alt=\"Task\" />\r\n                    <p>Главная</p>\r\n                </div>\r\n            </Link>\r\n            <Link  to=\"/create\">\r\n                <div className=\"nav__item\">\r\n                    <img src={create} width=\"50\" alt=\"Create\" />\r\n                    <p>Создать задачу</p>\r\n                </div>\r\n            </Link>\r\n            {auth ? \r\n            <Link to=\"/\" onClick={loggingOut}>\r\n                <div className=\"nav__item\">\r\n                    <img src={login} width=\"50\" alt=\"Login\" />\r\n                    <p>Выход</p>\r\n                </div> \r\n            </Link>\r\n            :\r\n            <Link to=\"/login\">\r\n                <div className=\"nav__item\">\r\n                    <img src={login} width=\"50\" alt=\"Login\" />\r\n                    <p>Вход</p>\r\n                </div> \r\n            </Link>\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import { useState } from \"react\"\r\n\r\nexport const useInput = (init) => {\r\n    const [value, setValue] = useState(init)\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n    const clear = () => {\r\n        setValue(init)\r\n    }\r\n\r\n\r\n    return {\r\n        bind:{value, onChange},\r\n        value,\r\n        clear\r\n    }\r\n}","import Cookies from 'js-cookie'\r\nimport {useRef, useState} from 'react'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { useInput } from '../hooks/customHooks'\r\nimport { editTask } from '../store/actions'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst TaskEditForm = ({match}) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const targetTaskId = match.params.id\r\n    const tasks = useSelector(state => state.tasks.tasks)\r\n\r\n    const token = Cookies.get(\"token\")\r\n\r\n    const targetTask = tasks.find(task => task.id === Number(targetTaskId))\r\n\r\n    const currentText = useInput(targetTask.text)\r\n    const initText = useRef(targetTask.text)\r\n\r\n    const statusRef = useRef()\r\n\r\n    const [taskStatus, setTaskStatus] = useState(targetTask.status)\r\n    const handleChange = (e) => {\r\n        if (e.target.checked){\r\n            setTaskStatus(Number(e.target.value))\r\n        }\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const modified = !(initText.current === currentText.value)\r\n        let status;\r\n        if (modified && (taskStatus === 10)){\r\n            status = 11\r\n        }else if (modified && (taskStatus === 0)){\r\n            status = 1\r\n        }else{\r\n            status = taskStatus\r\n        }\r\n        dispatch(editTask(targetTaskId, token, currentText.value, status ))\r\n        history.push(\"/\")\r\n\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"rightSide\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1 className=\"form__title\">Редактировать</h1>\r\n                <div className=\"editform\">\r\n                    <p className=\"editform__item\"><strong>Имя: </strong>{targetTask.username}</p>\r\n                    <p className=\"editform__item\"><strong>E-Почта: </strong>{targetTask.email}</p>\r\n                    <p><strong>Текущий статус: </strong></p>\r\n\r\n                    <div className=\"editform__item_indented\" >\r\n                        <input \r\n                            type=\"radio\" \r\n                            id=\"finished\" \r\n                            name=\"task\" \r\n                            value=\"10\"\r\n                            checked = {taskStatus > 1}\r\n                            onChange={handleChange}\r\n                                />\r\n                        <label htmlFor=\"finished\">Выполнено</label>\r\n                    </div>\r\n                    <div className=\"editform__item_indented\">\r\n                        <input \r\n                            ref={statusRef}\r\n                            type=\"radio\" \r\n                            id=\"pending\" \r\n                            name=\"task\" \r\n                            value=\"0\"\r\n                            checked={taskStatus < 10}\r\n                            onChange={handleChange}\r\n                            />\r\n                            \r\n                        <label htmlFor=\"pending\">Не выполнено</label>\r\n                    </div>\r\n                    <div className=\"editform__item\">\r\n                        <label htmlFor=\"text\"><strong>Teкст</strong></label>\r\n                        <textarea \r\n                            type=\"text\"\r\n                            className=\"form__item\" \r\n                            {...currentText.bind}\r\n                            placeholder=\"Введите ТЕКСТ задачи\"\r\n                            id=\"text\"\r\n                            required/>\r\n                        </div>\r\n                    <button \r\n                    className=\"button button-green\"\r\n                    type=\"submit\">Сохранить</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskEditForm\r\n","import {useEffect} from 'react'\r\nimport validator from \"validator\"\r\nimport { useInput } from '../hooks/customHooks'\r\nimport { createTask, showAlert } from '../store/actions'\r\nimport { useDispatch} from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport {sanitize} from \"dompurify\"\r\nimport {debounce} from \"../utils/ulits\"\r\n\r\n\r\nconst TaskCreate = () => {\r\n\r\n    const username = useInput(\"\")\r\n    const  email = useInput(\"\")\r\n    const text = useInput(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n   \r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (!validator.isEmail(email.value)){\r\n            return dispatch(showAlert(\"E-mail не валиден!\"))\r\n        }\r\n       dispatch(createTask(sanitize(username.value), sanitize(email.value), sanitize(text.value)))\r\n       username.clear()\r\n       email.clear()\r\n       text.clear()\r\n       history.push(\"/\")\r\n    }\r\n\r\n\r\n    function validateEmail(val) {\r\n        if (!validator.isEmail(val)){\r\n            dispatch(showAlert(\"E-mail не валиден!\"))\r\n        }\r\n    }\r\n\r\n    validateEmail = debounce(validateEmail, 1000)\r\n    function handleData() {validateEmail(this.value)}\r\n\r\n    useEffect(() => {\r\n        const emailInput = document.querySelector(\"#email\")\r\n        emailInput.addEventListener(\"keyup\", handleData)\r\n        return () => {\r\n            emailInput.removeEventListener(\"keyup\",handleData)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"rightSide\">\r\n            <form \r\n            className=\"form\"\r\n            onSubmit={onFormSubmit}\r\n            >\r\n                <h1 className=\"form__title\">Создать задание</h1>\r\n                <input \r\n                    className=\"form__item\"\r\n                    type=\"text\" \r\n                    {...username.bind}\r\n                    placeholder=\"Введите ваше ИМЯ\"\r\n                    required\r\n                    />\r\n                <br/>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"form__item\" \r\n                    {...email.bind} \r\n                    placeholder=\"Введите ваш E-MAIL адрес\"\r\n                    id=\"email\"\r\n                    required\r\n                    />\r\n                <br/>\r\n                <textarea \r\n                    type=\"text\"\r\n                    className=\"form__item form__textarea\" \r\n                    {...text.bind}\r\n                    placeholder=\"Введите ТЕКСТ задачи\"\r\n                    required\r\n                />\r\n                <br/>\r\n                <button className=\"button button-green\" type=\"submit\">Создать</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCreate\r\n","\r\nimport { useInput } from '../hooks/customHooks'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { logIn} from '../store/actions'\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\n\r\nconst LoginForm = () => {\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth.auth)\r\n\r\n    const username = useInput(\"\")\r\n    const password = useInput(\"\")\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(logIn(username.value, password.value)) \r\n    }\r\n    \r\n    if (auth){\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"rightSide loginform\">\r\n            <form className=\"form\" onSubmit={onSubmit}>\r\n                <h1 className=\"form__title\">Авторизация</h1>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form__item\"\r\n                    placeholder=\"Введите вашe имя\"\r\n                    {...username.bind}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"form__item\"\r\n                    placeholder=\"Введите ваш пароль\"\r\n                    {...password.bind}\r\n                    required\r\n                />\r\n                <button\r\n                className=\"button loginform__button button-green\"\r\n                type=\"submit\"\r\n                >Войти\r\n                </button>     \r\n            </form>\r\n           \r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default LoginForm\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Alert = () => {\r\n\r\n    const alert = useSelector(state => state.alert)\r\n  \r\n    return (\r\n        <div className=\"alert ml-100\">\r\n          <p>{alert}</p>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import { useEffect} from \"react\"\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\"\r\nimport Cookies from \"js-cookie\"\r\n\r\nimport \"../assets/styles.css\"\r\n\r\nimport TaskList from \"./TaskList\"\r\nimport Nav from \"./Nav\"\r\nimport TaskEditForm from \"./TaskEditForm\"\r\nimport TaskCreate from \"./TaskCreate\"\r\nimport LoginForm from \"./LoginForm\"\r\nimport Alert from \"./Alert\"\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { LOG_IN } from \"../store/types\"\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    const alert = useSelector(state => state.alert)\r\n    const dispatch = useDispatch()\r\n\r\n    const readCookies = () => {\r\n        const token = Cookies.get(\"token\")\r\n        if (token) {\r\n            dispatch({type:LOG_IN, payload:token})\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        readCookies()\r\n    })\r\n    return (\r\n        <div className=\"app\">\r\n        <Router>\r\n            {alert ? <Alert/>: null}\r\n            <Nav/>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={TaskList}/>\r\n                <Route path=\"/edit/:id\" exact component={TaskEditForm}/>\r\n                <Route path=\"/create\" exact component={TaskCreate}/>\r\n                <Route path=\"/login\" exact component={LoginForm}/>\r\n                <Route path=\"*\">\r\n                    <Redirect to=\"/\" />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default App\r\n","\r\nimport { combineReducers } from \"redux\";\r\nimport { \r\n    GET_TASKS, \r\n    CREATE_TASK, \r\n    LOG_IN, \r\n    SHOW_ALERT, \r\n    HIDE_ALERT, \r\n    LOG_OUT, \r\n    GET_TASK_COUNT,\r\n    SET_PAGE,\r\n    EDIT_TASK,\r\n    SET_SEARCH_FIELD,\r\n    SET_SEARCH_ORDER,\r\n    SET_LOADING,\r\n} from \"./types\";\r\n\r\nconst initTasks = {\r\n    tasks:[],\r\n    totalTasks:0, \r\n    loading:false\r\n}\r\n\r\nconst tasksReducer = (state=initTasks, action) => {\r\n    switch (action.type){\r\n        case GET_TASKS:\r\n            return {\r\n                ...state,\r\n                tasks:action.payload,\r\n                loading:false \r\n            }\r\n        case CREATE_TASK:\r\n            return {\r\n                ...state,\r\n                tasks:[action.payload, ...state.tasks.slice(0,2)] \r\n            }\r\n        case GET_TASK_COUNT:\r\n            return {\r\n                ...state,\r\n                totalTasks:action.payload\r\n            }\r\n        case EDIT_TASK:\r\n            return state\r\n\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst initAuth = {\r\n    auth: false,\r\n    token:null\r\n}\r\n\r\nconst authReducer = (state=initAuth, action) => {\r\n    switch (action.type){\r\n        case LOG_IN:\r\n            return {\r\n                ...state,\r\n                auth:true,\r\n                token:action.payload\r\n            }\r\n        case LOG_OUT:\r\n            return {\r\n                ...state,\r\n                auth:false,\r\n                token:null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst alertReducer = (alert=null, action) => {\r\n    switch (action.type){\r\n        case SHOW_ALERT:\r\n            return action.payload\r\n        case HIDE_ALERT:\r\n            return null\r\n        default:\r\n            return alert\r\n    }\r\n}\r\n\r\nconst paginationReducer = (page=1, action) => {\r\n    switch (action.type) {\r\n        case (SET_PAGE):\r\n            return action.payload\r\n        default:\r\n            return page   \r\n    }\r\n}\r\n\r\nconst searchInit = {\r\n    field:\"id\",\r\n    order:\"desc\"\r\n}\r\nconst searchReducer = (state=searchInit, action) => {\r\n    switch (action.type) {\r\n        case SET_SEARCH_FIELD:\r\n           return {\r\n               ...state,\r\n               field:action.payload\r\n           }\r\n        case SET_SEARCH_ORDER:\r\n           return {\r\n               ...state,\r\n               order:action.payload\r\n           }\r\n        default:\r\n            return state  \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    tasks: tasksReducer,\r\n    auth: authReducer,\r\n    alert:alertReducer,\r\n    currentPage:paginationReducer,\r\n    search: searchReducer\r\n})","import ReactDOM from \"react-dom\"\r\nimport App from \"./components/App\"\r\nimport {Provider} from \"react-redux\"\r\nimport {createStore, applyMiddleware, compose} from \"redux\"\r\nimport rootReducer from \"./store/reducers\"\r\nimport thunk from \"redux-thunk\"\r\n\r\n// const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n  ));\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n)\r\n\r\n\r\n"],"sourceRoot":""}